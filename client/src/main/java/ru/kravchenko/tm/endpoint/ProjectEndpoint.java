package ru.kravchenko.tm.endpoint;

import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.ws.Action;
import javax.xml.ws.FaultAction;
import javax.xml.ws.RequestWrapper;
import javax.xml.ws.ResponseWrapper;

/**
 * This class was generated by Apache CXF 3.2.7
 * 2019-05-17T01:34:13.043+03:00
 * Generated source version: 3.2.7
 *
 */
@WebService(targetNamespace = "http://endpoint.tm.kravchenko.ru/", name = "ProjectEndpoint")
@XmlSeeAlso({ObjectFactory.class})
public interface ProjectEndpoint {

    @WebMethod
    @Action(input = "http://endpoint.tm.kravchenko.ru/ProjectEndpoint/loadDateJAXBtoMapFromJsonRequest", output = "http://endpoint.tm.kravchenko.ru/ProjectEndpoint/loadDateJAXBtoMapFromJsonResponse", fault = {@FaultAction(className = AccessForbiddenException_Exception.class, value = "http://endpoint.tm.kravchenko.ru/ProjectEndpoint/loadDateJAXBtoMapFromJson/Fault/AccessForbiddenException")})
    @RequestWrapper(localName = "loadDateJAXBtoMapFromJson", targetNamespace = "http://endpoint.tm.kravchenko.ru/", className = "ru.kravchenko.tm.endpoint.LoadDateJAXBtoMapFromJson")
    @ResponseWrapper(localName = "loadDateJAXBtoMapFromJsonResponse", targetNamespace = "http://endpoint.tm.kravchenko.ru/", className = "ru.kravchenko.tm.endpoint.LoadDateJAXBtoMapFromJsonResponse")
    public void loadDateJAXBtoMapFromJson(
        @WebParam(name = "session", targetNamespace = "")
        ru.kravchenko.tm.endpoint.Session session
    ) throws AccessForbiddenException_Exception;

    @WebMethod
    @Action(input = "http://endpoint.tm.kravchenko.ru/ProjectEndpoint/saveDateSerializRequest", output = "http://endpoint.tm.kravchenko.ru/ProjectEndpoint/saveDateSerializResponse", fault = {@FaultAction(className = AccessForbiddenException_Exception.class, value = "http://endpoint.tm.kravchenko.ru/ProjectEndpoint/saveDateSerializ/Fault/AccessForbiddenException")})
    @RequestWrapper(localName = "saveDateSerializ", targetNamespace = "http://endpoint.tm.kravchenko.ru/", className = "ru.kravchenko.tm.endpoint.SaveDateSerializ")
    @ResponseWrapper(localName = "saveDateSerializResponse", targetNamespace = "http://endpoint.tm.kravchenko.ru/", className = "ru.kravchenko.tm.endpoint.SaveDateSerializResponse")
    public void saveDateSerializ(
        @WebParam(name = "session", targetNamespace = "")
        ru.kravchenko.tm.endpoint.Session session
    ) throws AccessForbiddenException_Exception;

    @WebMethod
    @Action(input = "http://endpoint.tm.kravchenko.ru/ProjectEndpoint/sortByStatusRequest", output = "http://endpoint.tm.kravchenko.ru/ProjectEndpoint/sortByStatusResponse", fault = {@FaultAction(className = AccessForbiddenException_Exception.class, value = "http://endpoint.tm.kravchenko.ru/ProjectEndpoint/sortByStatus/Fault/AccessForbiddenException")})
    @RequestWrapper(localName = "sortByStatus", targetNamespace = "http://endpoint.tm.kravchenko.ru/", className = "ru.kravchenko.tm.endpoint.SortByStatus")
    @ResponseWrapper(localName = "sortByStatusResponse", targetNamespace = "http://endpoint.tm.kravchenko.ru/", className = "ru.kravchenko.tm.endpoint.SortByStatusResponse")
    @WebResult(name = "return", targetNamespace = "")
    public java.util.List<ru.kravchenko.tm.endpoint.Project> sortByStatus(
        @WebParam(name = "session", targetNamespace = "")
        ru.kravchenko.tm.endpoint.Session session
    ) throws AccessForbiddenException_Exception;

    @WebMethod
    @Action(input = "http://endpoint.tm.kravchenko.ru/ProjectEndpoint/sortByDateBeginRequest", output = "http://endpoint.tm.kravchenko.ru/ProjectEndpoint/sortByDateBeginResponse", fault = {@FaultAction(className = AccessForbiddenException_Exception.class, value = "http://endpoint.tm.kravchenko.ru/ProjectEndpoint/sortByDateBegin/Fault/AccessForbiddenException")})
    @RequestWrapper(localName = "sortByDateBegin", targetNamespace = "http://endpoint.tm.kravchenko.ru/", className = "ru.kravchenko.tm.endpoint.SortByDateBegin")
    @ResponseWrapper(localName = "sortByDateBeginResponse", targetNamespace = "http://endpoint.tm.kravchenko.ru/", className = "ru.kravchenko.tm.endpoint.SortByDateBeginResponse")
    @WebResult(name = "return", targetNamespace = "")
    public java.util.List<ru.kravchenko.tm.endpoint.Project> sortByDateBegin(
        @WebParam(name = "session", targetNamespace = "")
        ru.kravchenko.tm.endpoint.Session session
    ) throws AccessForbiddenException_Exception;

    @WebMethod
    @Action(input = "http://endpoint.tm.kravchenko.ru/ProjectEndpoint/findOneProjectRequest", output = "http://endpoint.tm.kravchenko.ru/ProjectEndpoint/findOneProjectResponse", fault = {@FaultAction(className = AccessForbiddenException_Exception.class, value = "http://endpoint.tm.kravchenko.ru/ProjectEndpoint/findOneProject/Fault/AccessForbiddenException")})
    @RequestWrapper(localName = "findOneProject", targetNamespace = "http://endpoint.tm.kravchenko.ru/", className = "ru.kravchenko.tm.endpoint.FindOneProject")
    @ResponseWrapper(localName = "findOneProjectResponse", targetNamespace = "http://endpoint.tm.kravchenko.ru/", className = "ru.kravchenko.tm.endpoint.FindOneProjectResponse")
    @WebResult(name = "return", targetNamespace = "")
    public ru.kravchenko.tm.endpoint.Project findOneProject(
        @WebParam(name = "arg0", targetNamespace = "")
        ru.kravchenko.tm.endpoint.Session arg0,
        @WebParam(name = "arg1", targetNamespace = "")
        java.lang.String arg1
    ) throws AccessForbiddenException_Exception;

    @WebMethod
    @Action(input = "http://endpoint.tm.kravchenko.ru/ProjectEndpoint/removeAllProjectRequest", output = "http://endpoint.tm.kravchenko.ru/ProjectEndpoint/removeAllProjectResponse", fault = {@FaultAction(className = AccessForbiddenException_Exception.class, value = "http://endpoint.tm.kravchenko.ru/ProjectEndpoint/removeAllProject/Fault/AccessForbiddenException")})
    @RequestWrapper(localName = "removeAllProject", targetNamespace = "http://endpoint.tm.kravchenko.ru/", className = "ru.kravchenko.tm.endpoint.RemoveAllProject")
    @ResponseWrapper(localName = "removeAllProjectResponse", targetNamespace = "http://endpoint.tm.kravchenko.ru/", className = "ru.kravchenko.tm.endpoint.RemoveAllProjectResponse")
    public void removeAllProject(
        @WebParam(name = "session", targetNamespace = "")
        ru.kravchenko.tm.endpoint.Session session
    ) throws AccessForbiddenException_Exception;

    @WebMethod
    @Action(input = "http://endpoint.tm.kravchenko.ru/ProjectEndpoint/saveDateOMtoJsonRequest", output = "http://endpoint.tm.kravchenko.ru/ProjectEndpoint/saveDateOMtoJsonResponse", fault = {@FaultAction(className = AccessForbiddenException_Exception.class, value = "http://endpoint.tm.kravchenko.ru/ProjectEndpoint/saveDateOMtoJson/Fault/AccessForbiddenException")})
    @RequestWrapper(localName = "saveDateOMtoJson", targetNamespace = "http://endpoint.tm.kravchenko.ru/", className = "ru.kravchenko.tm.endpoint.SaveDateOMtoJson")
    @ResponseWrapper(localName = "saveDateOMtoJsonResponse", targetNamespace = "http://endpoint.tm.kravchenko.ru/", className = "ru.kravchenko.tm.endpoint.SaveDateOMtoJsonResponse")
    public void saveDateOMtoJson(
        @WebParam(name = "session", targetNamespace = "")
        ru.kravchenko.tm.endpoint.Session session
    ) throws AccessForbiddenException_Exception;

    @WebMethod
    @Action(input = "http://endpoint.tm.kravchenko.ru/ProjectEndpoint/saveDateJAXBtoXMLRequest", output = "http://endpoint.tm.kravchenko.ru/ProjectEndpoint/saveDateJAXBtoXMLResponse", fault = {@FaultAction(className = AccessForbiddenException_Exception.class, value = "http://endpoint.tm.kravchenko.ru/ProjectEndpoint/saveDateJAXBtoXML/Fault/AccessForbiddenException")})
    @RequestWrapper(localName = "saveDateJAXBtoXML", targetNamespace = "http://endpoint.tm.kravchenko.ru/", className = "ru.kravchenko.tm.endpoint.SaveDateJAXBtoXML")
    @ResponseWrapper(localName = "saveDateJAXBtoXMLResponse", targetNamespace = "http://endpoint.tm.kravchenko.ru/", className = "ru.kravchenko.tm.endpoint.SaveDateJAXBtoXMLResponse")
    public void saveDateJAXBtoXML(
        @WebParam(name = "session", targetNamespace = "")
        ru.kravchenko.tm.endpoint.Session session
    ) throws AccessForbiddenException_Exception;

    @WebMethod
    @Action(input = "http://endpoint.tm.kravchenko.ru/ProjectEndpoint/showAllProjectRequest", output = "http://endpoint.tm.kravchenko.ru/ProjectEndpoint/showAllProjectResponse", fault = {@FaultAction(className = AccessForbiddenException_Exception.class, value = "http://endpoint.tm.kravchenko.ru/ProjectEndpoint/showAllProject/Fault/AccessForbiddenException")})
    @RequestWrapper(localName = "showAllProject", targetNamespace = "http://endpoint.tm.kravchenko.ru/", className = "ru.kravchenko.tm.endpoint.ShowAllProject")
    @ResponseWrapper(localName = "showAllProjectResponse", targetNamespace = "http://endpoint.tm.kravchenko.ru/", className = "ru.kravchenko.tm.endpoint.ShowAllProjectResponse")
    @WebResult(name = "return", targetNamespace = "")
    public java.util.List<ru.kravchenko.tm.endpoint.Project> showAllProject(
        @WebParam(name = "session", targetNamespace = "")
        ru.kravchenko.tm.endpoint.Session session
    ) throws AccessForbiddenException_Exception;

    @WebMethod
    @Action(input = "http://endpoint.tm.kravchenko.ru/ProjectEndpoint/sortByDateEndRequest", output = "http://endpoint.tm.kravchenko.ru/ProjectEndpoint/sortByDateEndResponse", fault = {@FaultAction(className = AccessForbiddenException_Exception.class, value = "http://endpoint.tm.kravchenko.ru/ProjectEndpoint/sortByDateEnd/Fault/AccessForbiddenException")})
    @RequestWrapper(localName = "sortByDateEnd", targetNamespace = "http://endpoint.tm.kravchenko.ru/", className = "ru.kravchenko.tm.endpoint.SortByDateEnd")
    @ResponseWrapper(localName = "sortByDateEndResponse", targetNamespace = "http://endpoint.tm.kravchenko.ru/", className = "ru.kravchenko.tm.endpoint.SortByDateEndResponse")
    @WebResult(name = "return", targetNamespace = "")
    public java.util.List<ru.kravchenko.tm.endpoint.Project> sortByDateEnd(
        @WebParam(name = "session", targetNamespace = "")
        ru.kravchenko.tm.endpoint.Session session
    ) throws AccessForbiddenException_Exception;

    @WebMethod
    @Action(input = "http://endpoint.tm.kravchenko.ru/ProjectEndpoint/createProjectRequest", output = "http://endpoint.tm.kravchenko.ru/ProjectEndpoint/createProjectResponse", fault = {@FaultAction(className = AccessForbiddenException_Exception.class, value = "http://endpoint.tm.kravchenko.ru/ProjectEndpoint/createProject/Fault/AccessForbiddenException"), @FaultAction(className = UserNotFoundException_Exception.class, value = "http://endpoint.tm.kravchenko.ru/ProjectEndpoint/createProject/Fault/UserNotFoundException")})
    @RequestWrapper(localName = "createProject", targetNamespace = "http://endpoint.tm.kravchenko.ru/", className = "ru.kravchenko.tm.endpoint.CreateProject")
    @ResponseWrapper(localName = "createProjectResponse", targetNamespace = "http://endpoint.tm.kravchenko.ru/", className = "ru.kravchenko.tm.endpoint.CreateProjectResponse")
    public void createProject(
        @WebParam(name = "session", targetNamespace = "")
        ru.kravchenko.tm.endpoint.Session session,
        @WebParam(name = "name", targetNamespace = "")
        java.lang.String name,
        @WebParam(name = "description", targetNamespace = "")
        java.lang.String description
    ) throws AccessForbiddenException_Exception, UserNotFoundException_Exception;

    @WebMethod
    @Action(input = "http://endpoint.tm.kravchenko.ru/ProjectEndpoint/saveDateJAXBtoJsonRequest", output = "http://endpoint.tm.kravchenko.ru/ProjectEndpoint/saveDateJAXBtoJsonResponse", fault = {@FaultAction(className = AccessForbiddenException_Exception.class, value = "http://endpoint.tm.kravchenko.ru/ProjectEndpoint/saveDateJAXBtoJson/Fault/AccessForbiddenException")})
    @RequestWrapper(localName = "saveDateJAXBtoJson", targetNamespace = "http://endpoint.tm.kravchenko.ru/", className = "ru.kravchenko.tm.endpoint.SaveDateJAXBtoJson")
    @ResponseWrapper(localName = "saveDateJAXBtoJsonResponse", targetNamespace = "http://endpoint.tm.kravchenko.ru/", className = "ru.kravchenko.tm.endpoint.SaveDateJAXBtoJsonResponse")
    public void saveDateJAXBtoJson(
        @WebParam(name = "session", targetNamespace = "")
        ru.kravchenko.tm.endpoint.Session session
    ) throws AccessForbiddenException_Exception;

    @WebMethod
    @Action(input = "http://endpoint.tm.kravchenko.ru/ProjectEndpoint/loadDateOMtoJsonRequest", output = "http://endpoint.tm.kravchenko.ru/ProjectEndpoint/loadDateOMtoJsonResponse", fault = {@FaultAction(className = AccessForbiddenException_Exception.class, value = "http://endpoint.tm.kravchenko.ru/ProjectEndpoint/loadDateOMtoJson/Fault/AccessForbiddenException")})
    @RequestWrapper(localName = "loadDateOMtoJson", targetNamespace = "http://endpoint.tm.kravchenko.ru/", className = "ru.kravchenko.tm.endpoint.LoadDateOMtoJson")
    @ResponseWrapper(localName = "loadDateOMtoJsonResponse", targetNamespace = "http://endpoint.tm.kravchenko.ru/", className = "ru.kravchenko.tm.endpoint.LoadDateOMtoJsonResponse")
    public void loadDateOMtoJson(
        @WebParam(name = "session", targetNamespace = "")
        ru.kravchenko.tm.endpoint.Session session
    ) throws AccessForbiddenException_Exception;

    @WebMethod
    @Action(input = "http://endpoint.tm.kravchenko.ru/ProjectEndpoint/removeProjectRequest", output = "http://endpoint.tm.kravchenko.ru/ProjectEndpoint/removeProjectResponse", fault = {@FaultAction(className = AccessForbiddenException_Exception.class, value = "http://endpoint.tm.kravchenko.ru/ProjectEndpoint/removeProject/Fault/AccessForbiddenException")})
    @RequestWrapper(localName = "removeProject", targetNamespace = "http://endpoint.tm.kravchenko.ru/", className = "ru.kravchenko.tm.endpoint.RemoveProject")
    @ResponseWrapper(localName = "removeProjectResponse", targetNamespace = "http://endpoint.tm.kravchenko.ru/", className = "ru.kravchenko.tm.endpoint.RemoveProjectResponse")
    public void removeProject(
        @WebParam(name = "session", targetNamespace = "")
        ru.kravchenko.tm.endpoint.Session session,
        @WebParam(name = "name", targetNamespace = "")
        java.lang.String name
    ) throws AccessForbiddenException_Exception;

    @WebMethod
    @Action(input = "http://endpoint.tm.kravchenko.ru/ProjectEndpoint/loadDateSerializRequest", output = "http://endpoint.tm.kravchenko.ru/ProjectEndpoint/loadDateSerializResponse", fault = {@FaultAction(className = AccessForbiddenException_Exception.class, value = "http://endpoint.tm.kravchenko.ru/ProjectEndpoint/loadDateSerializ/Fault/AccessForbiddenException")})
    @RequestWrapper(localName = "loadDateSerializ", targetNamespace = "http://endpoint.tm.kravchenko.ru/", className = "ru.kravchenko.tm.endpoint.LoadDateSerializ")
    @ResponseWrapper(localName = "loadDateSerializResponse", targetNamespace = "http://endpoint.tm.kravchenko.ru/", className = "ru.kravchenko.tm.endpoint.LoadDateSerializResponse")
    public void loadDateSerializ(
        @WebParam(name = "session", targetNamespace = "")
        ru.kravchenko.tm.endpoint.Session session
    ) throws AccessForbiddenException_Exception;

    @WebMethod
    @Action(input = "http://endpoint.tm.kravchenko.ru/ProjectEndpoint/loadDateJAXBtoMapFromXMLRequest", output = "http://endpoint.tm.kravchenko.ru/ProjectEndpoint/loadDateJAXBtoMapFromXMLResponse", fault = {@FaultAction(className = AccessForbiddenException_Exception.class, value = "http://endpoint.tm.kravchenko.ru/ProjectEndpoint/loadDateJAXBtoMapFromXML/Fault/AccessForbiddenException")})
    @RequestWrapper(localName = "loadDateJAXBtoMapFromXML", targetNamespace = "http://endpoint.tm.kravchenko.ru/", className = "ru.kravchenko.tm.endpoint.LoadDateJAXBtoMapFromXML")
    @ResponseWrapper(localName = "loadDateJAXBtoMapFromXMLResponse", targetNamespace = "http://endpoint.tm.kravchenko.ru/", className = "ru.kravchenko.tm.endpoint.LoadDateJAXBtoMapFromXMLResponse")
    public void loadDateJAXBtoMapFromXML(
        @WebParam(name = "session", targetNamespace = "")
        ru.kravchenko.tm.endpoint.Session session
    ) throws AccessForbiddenException_Exception;
}
